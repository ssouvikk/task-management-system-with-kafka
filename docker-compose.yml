version: '3.8'

services:
  # PostgreSQL সার্ভিস
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Zookeeper সার্ভিস (Kafka এর জন্য)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka সার্ভিস
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # Backend সার্ভিস (Express.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      PORT: 5000
      SOCKET_PORT: 8080
      KAFKA_BROKER: kafka:9092
      JWT_SECRET: your_jwt_secret
      JWT_REFRESH_SECRET: your_jwt_refresh_secret_key
      DATABASE_URL: postgres://myuser:mypassword@postgres:5432/mydb
    depends_on:
      - postgres
      - kafka
      - zookeeper
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/usr/src/app

  # Frontend সার্ভিস (Next.js)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./client:/usr/src/app

volumes:
  pgdata:
