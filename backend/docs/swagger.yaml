openapi: "3.0.0"
info:
  title: "Express.js API ডকুমেন্টেশন"
  description: >
    এই ডকুমেন্টেশনে নিম্নলিখিত এন্ডপয়েন্টগুলোর বর্ণনা দেয়া হয়েছে:
    - **Authentication**: /signup, /login, /refresh-token
    - **Task Management**: /tasks (POST, GET), /tasks/{id} (PUT, DELETE)
    - **Notifications** (ঐচ্ছিক): /notifications
  version: "1.0.0"
servers:
  - url: "http://localhost:3000"
paths:
  /signup:
    post:
      tags:
        - Authentication
      summary: "ইউজার রেজিস্ট্রেশন"
      description: "নতুন ইউজার রেজিস্ট্রেশন এর এন্ডপয়েন্ট।"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
                username:
                  type: string
                  example: "user123"
            example:
              email: "user@example.com"
              password: "password123"
              username: "user123"
      responses:
        "201":
          description: "সফলভাবে রেজিস্ট্রেশন হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refreshToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  message:
                    type: string
                    example: "সফলভাবে রেজিস্ট্রেশন হয়েছে"
        "400":
          description: "ইউজার পূর্বেই বিদ্যমান অথবা ইনপুটে ত্রুটি"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "ইউজার পূর্বেই বিদ্যমান"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "সার্ভার এরর"

  /login:
    post:
      tags:
        - Authentication
      summary: "ইউজার লগিন"
      description: "ইউজার লগিন করার এন্ডপয়েন্ট।"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
            example:
              email: "user@example.com"
              password: "password123"
      responses:
        "200":
          description: "সফলভাবে লগইন হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refreshToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  message:
                    type: string
                    example: "সফলভাবে লগইন হয়েছে"
        "400":
          description: "ভুল ক্রেডেনশিয়াল"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "ভুল ক্রেডেনশিয়াল"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "সার্ভার এরর"

  /refresh-token:
    post:
      tags:
        - Authentication
      summary: "টোকেন রিফ্রেশ"
      description: "রিফ্রেশ টোকেন যাচাই করে নতুন access ও refresh token ইস্যু করে।"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            example:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        "200":
          description: "নতুন টোকেন সফলভাবে ইস্যু হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "newAccessToken123..."
                      refreshToken:
                        type: string
                        example: "newRefreshToken123..."
                  message:
                    type: string
                    example: "নতুন টোকেন সফলভাবে ইস্যু হয়েছে"
        "401":
          description: "রিফ্রেশ টোকেন প্রয়োজন"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "রিফ্রেশ টোকেন প্রয়োজন"
        "403":
          description: "রিফ্রেশ টোকেন অবৈধ"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "রিফ্রেশ টোকেন অবৈধ"

  /tasks:
    post:
      tags:
        - Task Management
      summary: "নতুন টাস্ক তৈরি"
      description: "JWT Authentication প্রয়োজন – নতুন টাস্ক তৈরি করার এন্ডপয়েন্ট।"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "নতুন টাস্ক"
                description:
                  type: string
                  example: "টাস্কের বর্ণনা"
                priority:
                  type: string
                  enum: [Low, Medium, High]
                  example: "Medium"
                status:
                  type: string
                  enum: ["To Do", "In Progress", "Done"]
                  example: "To Do"
                dueDate:
                  type: string
                  format: date-time
                  example: "2025-03-01T00:00:00Z"
                assignedTo:
                  type: string
                  example: "user2"  # এখন এটি একটি string হিসেবে ধরা হচ্ছে
            example:
              title: "নতুন টাস্ক"
              description: "টাস্কের বর্ণনা"
              priority: "Medium"
              status: "To Do"
              dueDate: "2025-03-01T00:00:00Z"
              assignedTo: "user2"
      responses:
        "201":
          description: "টাস্ক সফলভাবে তৈরি হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
                  message:
                    type: string
                    example: "Task created successfully"
        "400":
          description: "ভুল ইনপুট বা অনুপস্থিত ফিল্ড"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Title is required"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Server error"
    get:
      tags:
        - Task Management
      summary: "টাস্ক লিস্ট সংগ্রহ"
      description: "JWT Authentication প্রয়োজন – ইউজারের টাস্ক লিস্ট রিট্রিভ করার এন্ডপয়েন্ট।"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: priority
          schema:
            type: string
            enum: [Low, Medium, High]
          description: "প্রায়োরিটি অনুযায়ী ফিল্টার"
        - in: query
          name: status
          schema:
            type: string
            enum: ["To Do", "In Progress", "Done"]
          description: "স্ট্যাটাস অনুযায়ী ফিল্টার"
        - in: query
          name: dueDate
          schema:
            type: string
            format: date
          description: "ডিউ তারিখ (YYYY-MM-DD)"
        - in: query
          name: perPage
          schema:
            type: number
            example: 10
          description: "প্রতি পেজ কতটি টাস্ক দেখানো হবে"
        - in: query
          name: pageNumber
          schema:
            type: number
            example: 1
          description: "কোন পেজের তথ্য চাওয়া হচ্ছে"
      responses:
        "200":
          description: "সফলভাবে টাস্ক লিস্ট রিট্রিভ করা হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Task'
                      total:
                        type: number
                        example: 100
                      pageNumber:
                        type: number
                        example: 1
                      perPage:
                        type: number
                        example: 10
                  message:
                    type: string
                    example: ""
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Server error"

  /tasks/{id}:
    put:
      tags:
        - Task Management
      summary: "টাস্ক আপডেট"
      description: "JWT Authentication প্রয়োজন – নির্দিষ্ট টাস্ক আপডেট করার এন্ডপয়েন্ট।"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
          description: "আপডেট করতে চাওয়া টাস্কের আইডি"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "আপডেটেড টাস্ক"
                description:
                  type: string
                  example: "আপডেটেড বর্ণনা"
                priority:
                  type: string
                  enum: [Low, Medium, High]
                  example: "High"
                status:
                  type: string
                  enum: ["To Do", "In Progress", "Done"]
                  example: "In Progress"
                dueDate:
                  type: string
                  format: date-time
                  example: "2025-04-01T00:00:00Z"
                assignedTo:
                  type: string
                  example: "user3"
            example:
              title: "আপডেটেড টাস্ক"
              description: "আপডেটেড বর্ণনা"
              priority: "High"
              status: "In Progress"
              dueDate: "2025-04-01T00:00:00Z"
              assignedTo: "user3"
      responses:
        "200":
          description: "টাস্ক সফলভাবে আপডেট হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
                  message:
                    type: string
                    example: "Task updated successfully"
        "400":
          description: "ভুল ইনপুট বা অনুপযুক্ত ফিল্ড"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Invalid priority value"
        "403":
          description: "অথরাইজেশনের ত্রুটি"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Not authorized to update this task"
        "404":
          description: "টাস্ক পাওয়া যায়নি"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Task not found"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Server error"
    delete:
      tags:
        - Task Management
      summary: "টাস্ক মুছে ফেলা"
      description: "JWT Authentication প্রয়োজন – নির্দিষ্ট টাস্ক মুছে ফেলার এন্ডপয়েন্ট।"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
          description: "মুছে ফেলতে চাওয়া টাস্কের আইডি"
      responses:
        "200":
          description: "টাস্ক সফলভাবে মুছে ফেলা হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Task deleted successfully"
        "403":
          description: "অথরাইজেশন ত্রুটি"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Not authorized to delete this task"
        "404":
          description: "টাস্ক পাওয়া যায়নি"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Task not found"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Server error"

  /notifications:
    get:
      tags:
        - Notifications
      summary: "নোটিফিকেশন সংগ্রহ"
      description: "JWT Authentication প্রয়োজন – ইউজারের নোটিফিকেশন লিস্ট রিট্রিভ করার এন্ডপয়েন্ট (ঐচ্ছিক)।"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "সফলভাবে নোটিফিকেশন রিট্রিভ হয়েছে"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        message:
                          type: string
                          example: "নতুন টাস্ক অ্যাসাইন হয়েছে"
                        read:
                          type: boolean
                          example: false
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-02-17T10:00:00Z"
                  message:
                    type: string
                    example: ""
        "401":
          description: "অ্যাক্সেস ডিনাইড"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Access Denied"
        "500":
          description: "সার্ভার এরর"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: "null"
                  message:
                    type: string
                    example: "Server error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        username:
          type: string
          example: "user123"
        email:
          type: string
          example: "user@example.com"
        role:
          type: string
          example: "user"
    Task:
      type: object
      properties:
        id:
          type: number
          example: 1
        title:
          type: string
          example: "নতুন টাস্ক"
        description:
          type: string
          example: "টাস্কের বর্ণনা"
        priority:
          type: string
          enum: [Low, Medium, High]
          example: "Medium"
        status:
          type: string
          enum: ["To Do", "In Progress", "Done"]
          example: "To Do"
        dueDate:
          type: string
          format: date-time
          example: "2025-03-01T00:00:00Z"
        assignedTo:
          type: string
          example: "user2"
        createdAt:
          type: string
          format: date-time
          example: "2025-02-17T09:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-02-17T10:00:00Z"
        createdBy:
          $ref: '#/components/schemas/User'
